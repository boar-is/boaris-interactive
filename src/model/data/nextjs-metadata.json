{
  "type": "doc",
  "content": [
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Most of us developers "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "bold"
            }
          ],
          "text": "hate"
        },
        {
          "type": "text",
          "text": " dealing with SEO."
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "It’s frustrating, it’s not part of business logic, and it’s definitely "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "italic"
            }
          ],
          "text": "not"
        },
        {
          "type": "text",
          "text": " fun."
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "But it needs to be done."
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "And we just want to get it done quickly."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Next.js provides us with a flexible "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://nextjs.org/docs/app/building-your-application/optimizing/metadata",
                "target": "_blank",
                "rel": "noopener"
              }
            }
          ],
          "text": "Metadata API"
        },
        {
          "type": "text",
          "text": "."
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "But the docs don’t show what works for "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "italic"
            }
          ],
          "text": "most"
        },
        {
          "type": "text",
          "text": " projects."
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "They also skip some important under-the-hood logic."
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "So we’re left figuring things out through trial and error."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "So we search for guides. But they don’t help."
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "They explain SEO 101. But we already know that."
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "They use "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "example.com"
        },
        {
          "type": "text",
          "text": " or "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "SITE_URL"
        },
        {
          "type": "text",
          "text": ". But URLs can be derived automatically."
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "They tell us to add a ton of icons and a PWA manifest."
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "But our guts say that’s overkill…"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "That’s "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "italic"
            }
          ],
          "text": "why"
        },
        {
          "type": "text",
          "text": " I wrote this guide."
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "To help you put everything together."
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "So you can focus on building what "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "italic"
            }
          ],
          "text": "actually"
        },
        {
          "type": "text",
          "text": " matters."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "No need for libraries like "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://github.com/garmeeh/next-seo",
                "target": "_blank",
                "rel": "noopener"
              }
            }
          ],
          "text": "next-seo"
        },
        {
          "type": "text",
          "text": " or "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://github.com/iamvishnusankar/next-sitemap",
                "target": "_blank",
                "rel": "noopener"
              }
            }
          ],
          "text": "next-sitemap"
        },
        {
          "type": "text",
          "text": "."
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "Next.js Metadata API is enough for most cases."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "And even though this is an “enough-is-enough” setup,"
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "it’s a solid foundation that can be extended when needed."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 0
      },
      "content": [
        {
          "type": "text",
          "text": "Metadata"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Let me show you a "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "textStyle"
            },
            {
              "type": "italic"
            }
          ],
          "text": "bad"
        },
        {
          "type": "text",
          "text": " example — so we can turn it into a "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "textStyle"
            },
            {
              "type": "italic"
            }
          ],
          "text": "perfect"
        },
        {
          "type": "text",
          "text": " one."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Here’s how we might set up metadata for a blog post:"
        }
      ]
    },
    {
      "type": "orderedList",
      "attrs": {
        "start": 1
      },
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "We "
                },
                {
                  "type": "text",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ],
                  "text": "generateStaticParams"
                },
                {
                  "type": "text",
                  "text": " so that "
                },
                {
                  "type": "text",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ],
                  "text": "recentPosts"
                },
                {
                  "type": "text",
                  "text": " are "
                },
                {
                  "type": "text",
                  "marks": [
                    {
                      "type": "link",
                      "attrs": {
                        "href": "https://nextjs.org/docs/app/building-your-application/rendering/server-components#static-rendering-default",
                        "target": "_blank",
                        "rel": "noopener"
                      }
                    }
                  ],
                  "text": "statically optimized"
                },
                {
                  "type": "text",
                  "text": "."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Then, we use those "
                },
                {
                  "type": "text",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ],
                  "text": "params"
                },
                {
                  "type": "text",
                  "text": " to "
                },
                {
                  "type": "text",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ],
                  "text": "fetchPostBySlug"
                },
                {
                  "type": "text",
                  "text": "."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "If the "
                },
                {
                  "type": "text",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ],
                  "text": "post"
                },
                {
                  "type": "text",
                  "text": " isn’t found, we "
                },
                {
                  "type": "text",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ],
                  "text": "return"
                },
                {
                  "type": "text",
                  "text": " early."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Otherwise, we return some "
                },
                {
                  "type": "text",
                  "marks": [
                    {
                      "type": "link",
                      "attrs": {
                        "href": "https://nextjs.org/docs/app/api-reference/functions/generate-metadata#basic-fields",
                        "target": "_blank",
                        "rel": "noopener"
                      }
                    }
                  ],
                  "text": "Basic Fields"
                },
                {
                  "type": "text",
                  "text": ", along with "
                },
                {
                  "type": "text",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ],
                  "text": "openGraph"
                },
                {
                  "type": "text",
                  "text": " and "
                },
                {
                  "type": "text",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ],
                  "text": "twitter"
                },
                {
                  "type": "text",
                  "text": "."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Finally, we construct the "
                },
                {
                  "type": "text",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ],
                  "text": "Page"
                },
                {
                  "type": "text",
                  "text": " itself using similar logic."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Now that we have this example, let’s break it down piece by piece."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "Duplication"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The first thing you’ll notice is duplication here and there."
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "This is the first confusion you face when working with the Metadata API."
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "The docs aren’t clear on whether you should duplicate "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "title"
        },
        {
          "type": "text",
          "text": " and "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "description"
        },
        {
          "type": "text",
          "text": " for OpenGraph."
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "And based on the DRY principle — should we create a helper like "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "constructMetadata"
        },
        {
          "type": "text",
          "text": "?"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The truth is — we shouldn’t!"
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "Actually, the correct output is "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "italic"
            }
          ],
          "text": "this"
        },
        {
          "type": "text",
          "text": " one."
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "Next.js falls back to the top-level "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "title"
        },
        {
          "type": "text",
          "text": " and "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "description"
        },
        {
          "type": "text",
          "text": " if they’re missing."
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "Only set "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "openGraph"
        },
        {
          "type": "text",
          "text": " and "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "twitter"
        },
        {
          "type": "text",
          "text": " if you need unique values."
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "And in most cases, you don’t."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The same applies to "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "images"
        },
        {
          "type": "text",
          "text": "."
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "You only need to set it for "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "openGraph"
        },
        {
          "type": "text",
          "text": " — "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "twitter"
        },
        {
          "type": "text",
          "text": " will be generated automatically."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "So here’s the revised version with no duplication."
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "OpenGraph and Twitter metadata are still generated as expected."
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "Duplication is one of the biggest misconceptions about the Metadata API."
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "And most guides out there only reinforce it."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "Basic Fields"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Next.js docs introduce you to “"
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://nextjs.org/docs/app/api-reference/functions/generate-metadata#basic-fields",
                "target": "_blank",
                "rel": "noopener"
              }
            }
          ],
          "text": "Basic Fields"
        },
        {
          "type": "text",
          "text": "”."
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "But do you "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "italic"
            }
          ],
          "text": "really"
        },
        {
          "type": "text",
          "text": " need them? And what about “Advanced Fields”?"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The truth is, search engines "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://developers.google.com/search/docs/crawling-indexing/special-tags",
                "target": "_blank",
                "rel": "noopener"
              }
            }
          ],
          "text": "don’t care about most of them"
        },
        {
          "type": "text",
          "text": "."
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "And when you "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "italic"
            }
          ],
          "text": "actually"
        },
        {
          "type": "text",
          "text": " need the “advanced” fields, you’ll "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://support.google.com/webmasters/answer/9008080?hl=en",
                "target": "_blank",
                "rel": "noopener"
              }
            }
          ],
          "text": "know for sure"
        },
        {
          "type": "text",
          "text": "."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "If you "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "italic"
            }
          ],
          "text": "really"
        },
        {
          "type": "text",
          "text": " want to provide these fields, consider JSON-LD."
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "It helps search engines generate rich results."
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "Most projects don’t need it, and if yours does, the official docs "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://nextjs.org/docs/app/building-your-application/optimizing/metadata#json-ld",
                "target": "_blank",
                "rel": "noopener"
              }
            }
          ],
          "text": "explain it well"
        },
        {
          "type": "text",
          "text": "."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "So just keep "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "title"
        },
        {
          "type": "text",
          "text": " and "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "description"
        },
        {
          "type": "text",
          "text": ", drop everything else, and let’s move on."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "Templates"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "But what if we don’t want to provide "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "title"
        },
        {
          "type": "text",
          "text": " and "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "description"
        },
        {
          "type": "text",
          "text": " for every page?"
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "How do we set default values?"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Now that we’ve removed duplication, "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://nextjs.org/docs/app/api-reference/functions/generate-metadata#template-object",
                "target": "_blank",
                "rel": "noopener"
              }
            }
          ],
          "text": "templates"
        },
        {
          "type": "text",
          "text": " are useful again!"
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "Often, duplication stops us from using them properly because of how merging works."
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "Now, we can set proper defaults in "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "RootLayout"
        },
        {
          "type": "text",
          "text": " — and override them when needed."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Don’t forget — merging is "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "italic"
            }
          ],
          "text": "shallow"
        },
        {
          "type": "text",
          "text": "."
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "And that’s actually a good thing."
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "You can always merge deeply with "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "structuredClone"
        },
        {
          "type": "text",
          "text": "."
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "But if merging were deep by default, you "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "italic"
            }
          ],
          "text": "couldn’t"
        },
        {
          "type": "text",
          "text": " make it shallow when needed."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "Not Found"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Now, let’s talk about the "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "Post Not Found"
        },
        {
          "type": "text",
          "text": " state."
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "Actually, this state "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "italic"
            }
          ],
          "text": "isn’t"
        },
        {
          "type": "text",
          "text": " possible in our case."
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "We’re "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "italic"
            }
          ],
          "text": "already"
        },
        {
          "type": "text",
          "text": " handling it by calling "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "notFound"
        },
        {
          "type": "text",
          "text": " inside the "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "Page"
        },
        {
          "type": "text",
          "text": " itself."
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "But we still need to help TypeScript infer the type as non-null — so let’s return "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "notFound"
        },
        {
          "type": "text",
          "text": " there as well."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "Request Memoization"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "You might have noticed that "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "generateMetadata"
        },
        {
          "type": "text",
          "text": " and "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "Page"
        },
        {
          "type": "text",
          "text": " fetch data using different functions."
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "And that’s a problem."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Next.js "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "bold"
            }
          ],
          "text": "memoizes requests with the same URL"
        },
        {
          "type": "text",
          "text": " across functions like "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "generateMetadata"
        },
        {
          "type": "text",
          "text": " and "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "Page"
        },
        {
          "type": "text",
          "text": "."
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "So you should use a single "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "fetch"
        },
        {
          "type": "text",
          "text": " function for the whole page — even if some fields aren’t needed for metadata."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "And now, we’re almost there — except for one thing: images."
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "It’s much better to generate them."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Not just because this metadata can be precomputed at build time."
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "But that’s a whole other topic."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 0
      },
      "content": [
        {
          "type": "text",
          "text": "Images"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The problem with providing a URL in metadata?"
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "Images "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "italic"
            }
          ],
          "text": "aren’t"
        },
        {
          "type": "text",
          "text": " cached on the client side."
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "You need to rely on the origin to serve them properly."
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "And if they’re inside the "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "public"
        },
        {
          "type": "text",
          "text": " folder, "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://nextjs.org/docs/app/building-your-application/optimizing/static-assets#caching",
                "target": "_blank",
                "rel": "noopener"
              }
            }
          ],
          "text": "they’re not cached at all"
        },
        {
          "type": "text",
          "text": "."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "To save bandwidth, images need to be cached "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "italic"
            }
          ],
          "text": "properly"
        },
        {
          "type": "text",
          "text": "."
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "Next.js solves this with "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://nextjs.org/docs/app/building-your-application/rendering/server-components#static-rendering-default",
                "target": "_blank",
                "rel": "noopener"
              }
            }
          ],
          "text": "Static Rendering"
        },
        {
          "type": "text",
          "text": "."
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "It optimizes images at build time by adding a hash, making them "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "bold"
            }
          ],
          "text": "immutable"
        },
        {
          "type": "text",
          "text": "."
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "It also generates metadata like image "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "type"
        },
        {
          "type": "text",
          "text": ", "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "width"
        },
        {
          "type": "text",
          "text": ", and "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "height"
        },
        {
          "type": "text",
          "text": " for you."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "All you have to do is put "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "opengraph-image"
        },
        {
          "type": "text",
          "text": " near "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "page.tsx"
        },
        {
          "type": "text",
          "text": "."
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "No need for a separate "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "twitter-image"
        },
        {
          "type": "text",
          "text": "."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "We can use "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": ".png"
        },
        {
          "type": "text",
          "text": " for images we know beforehand — like for the home page."
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "But dynamic blog post images?"
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "Those should be "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "italic"
            }
          ],
          "text": "generated"
        },
        {
          "type": "text",
          "text": "…"
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://nextjs.org/docs/app/api-reference/file-conventions/metadata/opengraph-image#generate-images-using-code-js-ts-tsx",
                "target": "_blank",
                "rel": "noopener"
              }
            }
          ],
          "text": "Image Generation"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Let’s start with a basic example of "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "opengraph-image.tsx"
        },
        {
          "type": "text",
          "text": ":"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Set the recommended size: "
                },
                {
                  "type": "text",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ],
                  "text": "1200x630"
                },
                {
                  "type": "text",
                  "text": "."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Use "
                },
                {
                  "type": "text",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ],
                  "text": "params"
                },
                {
                  "type": "text",
                  "text": " to "
                },
                {
                  "type": "text",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ],
                  "text": "fetchPostBySlug"
                },
                {
                  "type": "text",
                  "text": ", just like before."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Return early if the post is "
                },
                {
                  "type": "text",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ],
                  "text": "notFound"
                },
                {
                  "type": "text",
                  "text": "."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Then, return an "
                },
                {
                  "type": "text",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ],
                  "text": "ImageResponse"
                },
                {
                  "type": "text",
                  "text": "."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Nothing complicated so far. But this isn’t enough."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "First, "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://nextjs.org/docs/app/building-your-application/optimizing/fonts",
                "target": "_blank",
                "rel": "noopener"
              }
            }
          ],
          "text": "Font Optimization"
        },
        {
          "type": "text",
          "text": " "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "bold"
            }
          ],
          "text": "doesn’t work"
        },
        {
          "type": "text",
          "text": " with "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "ImageResponse"
        },
        {
          "type": "text",
          "text": "."
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "So we have to install fonts "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "italic"
            }
          ],
          "text": "locally"
        },
        {
          "type": "text",
          "text": "."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "And honestly, I highly recommend doing this anyway."
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "Take "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://rsms.me/inter/",
                "target": "_blank",
                "rel": "noopener"
              }
            }
          ],
          "text": "Inter"
        },
        {
          "type": "text",
          "text": ", for example."
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "The locally installed version has a ton of "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://rsms.me/inter/#features",
                "target": "_blank",
                "rel": "noopener"
              }
            }
          ],
          "text": "features"
        },
        {
          "type": "text",
          "text": " that Google Fonts "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "italic"
            }
          ],
          "text": "strips out"
        },
        {
          "type": "text",
          "text": "."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "And let’s be real — you’ll have even more options beyond Inter."
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "It’s everywhere now. 😅"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Anyway, "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://rsms.me/inter/download/",
                "target": "_blank",
                "rel": "noopener"
              }
            }
          ],
          "text": "download the font"
        },
        {
          "type": "text",
          "text": ", unzip it into your project, and connect it like in the example."
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "Just note that "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://github.com/vercel/satori/discussions/157",
                "target": "_blank",
                "rel": "noopener"
              }
            }
          ],
          "text": "WOFF2 isn’t supported"
        },
        {
          "type": "text",
          "text": ", so use "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "bold"
            }
          ],
          "text": "WOFF"
        },
        {
          "type": "text",
          "text": " or "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "bold"
            }
          ],
          "text": "TTF"
        },
        {
          "type": "text",
          "text": " instead."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Also, if you have static text, you can use "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://danmarshall.github.io/google-font-to-svg-path/",
                "target": "_blank",
                "rel": "noopener"
              }
            }
          ],
          "text": "google-font-to-svg-path"
        },
        {
          "type": "text",
          "text": " as a one-time solution."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "When it comes to styling, you have two options: "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "bold"
            }
          ],
          "text": "inline styles"
        },
        {
          "type": "text",
          "text": " or "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "bold"
            }
          ],
          "text": "Tailwind"
        },
        {
          "type": "text",
          "text": "."
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "And I "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "italic"
            }
          ],
          "text": "don’t"
        },
        {
          "type": "text",
          "text": " recommend the latter."
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "ImageResponse"
        },
        {
          "type": "text",
          "text": " "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "bold"
            }
          ],
          "text": "won’t respect your Tailwind config"
        },
        {
          "type": "text",
          "text": "."
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "So forget about your carefully set "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "text-primary"
        },
        {
          "type": "text",
          "text": " tokens."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Also, many Tailwind classes "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "italic"
            }
          ],
          "text": "aren’t supported"
        },
        {
          "type": "text",
          "text": ", so you’ll end up mixing them with inline styles anyway."
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "And honestly? There’s nothing wrong with inline styles for this."
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "They’re simple, and they just work."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "To keep things concise, here’s the exact code I use on this website."
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "Feel free to take inspiration, and let's move on."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 0
      },
      "content": [
        {
          "type": "text",
          "text": "Icons"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Besides images, you’ll need a favicon and a few larger icons for bookmarks."
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "The first question is: "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "italic"
            }
          ],
          "text": "how many"
        },
        {
          "type": "text",
          "text": "?"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "You’ve probably seen guides telling you to crop 20-30 images, convert them into multiple formats, and add a ton of meta tags."
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "Don’t worry — that’s "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "italic"
            }
          ],
          "text": "outdated"
        },
        {
          "type": "text",
          "text": " advice."
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "Unless you care about rare edge cases, "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://evilmartians.com/chronicles/how-to-favicon-in-2021-six-files-that-fit-most-needs",
                "target": "_blank",
                "rel": "noopener"
              }
            }
          ],
          "text": "keep it simple"
        },
        {
          "type": "text",
          "text": "."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "What about PWA manifests?"
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "Let’s be honest — how many users even know about that, "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "bold"
            }
          ],
          "text": "let alone use it"
        },
        {
          "type": "text",
          "text": "?"
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "Unless you’re building a full-fledged PWA, it’s just not worth the effort."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "For most use cases, here’s all you need:"
        }
      ]
    },
    {
      "type": "orderedList",
      "attrs": {
        "start": 1
      },
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Prepare a large "
                },
                {
                  "type": "text",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ],
                  "text": "180x180"
                },
                {
                  "type": "text",
                  "text": " icon. Use this as your base."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Visit "
                },
                {
                  "type": "text",
                  "marks": [
                    {
                      "type": "link",
                      "attrs": {
                        "href": "https://realfavicongenerator.net/",
                        "target": "_blank",
                        "rel": "noopener noreferrer",
                        "class": "notion-link-token notion-focusable-token notion-enable-hover"
                      }
                    },
                    {
                      "type": "textStyle"
                    }
                  ],
                  "text": "RealFaviconGenerator"
                },
                {
                  "type": "text",
                  "text": "."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Upload your icon."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Download the generated files."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "From the downloaded "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "favicon-for-app.zip"
        },
        {
          "type": "text",
          "text": ":"
        }
      ]
    },
    {
      "type": "orderedList",
      "attrs": {
        "start": 1
      },
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Extract "
                },
                {
                  "type": "text",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ],
                  "text": "apple-icon.png"
                },
                {
                  "type": "text",
                  "text": ", "
                },
                {
                  "type": "text",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ],
                  "text": "favicon.ico"
                },
                {
                  "type": "text",
                  "text": ", and "
                },
                {
                  "type": "text",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ],
                  "text": "icon.png"
                },
                {
                  "type": "text",
                  "text": " into your "
                },
                {
                  "type": "text",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ],
                  "text": "app"
                },
                {
                  "type": "text",
                  "text": " folder."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Skip "
                },
                {
                  "type": "text",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ],
                  "text": "icon.svg"
                },
                {
                  "type": "text",
                  "text": ". It’s just a base64 version of your PNG and can be 10x larger. Use it only if you have a true vector version of your icon."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "For most projects, this setup "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "italic"
            }
          ],
          "text": "is"
        },
        {
          "type": "text",
          "text": " enough."
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "Adding 20-30 icons is like supporting IE11 — you should know exactly "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "italic"
            }
          ],
          "text": "why"
        },
        {
          "type": "text",
          "text": " you’re doing it."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 0
      },
      "content": [
        {
          "type": "text",
          "text": "Sitemap"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://nextjs.org/docs/app/api-reference/file-conventions/metadata/sitemap#generating-a-sitemap-using-code-js-ts",
                "target": "_blank",
                "rel": "noopener"
              }
            }
          ],
          "text": "Next.js Sitemap API"
        },
        {
          "type": "text",
          "text": " is straightforward."
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "You fetch your data and use basic JavaScript loops to generate the sitemap."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "But there’s one catch."
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "You "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "italic"
            }
          ],
          "text": "can’t"
        },
        {
          "type": "text",
          "text": " use relative URLs like you can in metadata ."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Next.js doesn’t provide any API for resolving relative URLs in sitemaps."
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "italic"
            }
          ],
          "text": "Fortunately"
        },
        {
          "type": "text",
          "text": ", we can simulate this behavior by looking at the "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://nextjs.org/docs/app/api-reference/functions/generate-metadata#metadatabase",
                "target": "_blank",
                "rel": "noopener"
              }
            }
          ],
          "text": "default logic for resolving URLs"
        },
        {
          "type": "text",
          "text": " in metadata."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "After some digging, I found "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://github.com/vercel/next.js/blob/canary/packages/next/src/lib/metadata/resolvers/resolve-url.ts",
                "target": "_blank",
                "rel": "noopener"
              }
            }
          ],
          "text": "functions in the source code"
        },
        {
          "type": "text",
          "text": " that can be combined into a utility for resolving both relative and absolute URLs."
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "It’s not identical to how metadata handles URLs, but it’s close enough."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "So here’s the sitemap with the integrated utility function."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "This utility isn’t just useful for sitemaps."
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "It’s also useful for things like resolving the "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "basePath"
        },
        {
          "type": "text",
          "text": " for "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://authjs.dev/",
                "target": "_blank",
                "rel": "noopener"
              }
            }
          ],
          "text": "Auth.js"
        },
        {
          "type": "text",
          "text": " endpoints."
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "Thank me later!"
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "A Note on Ignored Fields"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "In the example above, we included "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "lastModified"
        },
        {
          "type": "text",
          "text": " to help crawlers detect post freshness."
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "But we skipped fields like "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "priority"
        },
        {
          "type": "text",
          "text": " and "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "changeFrequency"
        },
        {
          "type": "text",
          "text": " because "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://developers.google.com/search/docs/crawling-indexing/sitemaps/build-sitemap#additional-notes-about-xml-sitemaps",
                "target": "_blank",
                "rel": "noopener"
              }
            }
          ],
          "text": "Google ignores them"
        },
        {
          "type": "text",
          "text": "."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Here’s why:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "They’re often misconfigured. For example, "
                },
                {
                  "type": "text",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ],
                  "text": "priority"
                },
                {
                  "type": "text",
                  "text": " is a "
                },
                {
                  "type": "text",
                  "marks": [
                    {
                      "type": "italic"
                    }
                  ],
                  "text": "relative"
                },
                {
                  "type": "text",
                  "text": " field, but many sites incorrectly set it to "
                },
                {
                  "type": "text",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ],
                  "text": "1"
                },
                {
                  "type": "text",
                  "text": " , making it "
                },
                {
                  "type": "text",
                  "marks": [
                    {
                      "type": "italic"
                    }
                  ],
                  "text": "meaningless"
                },
                {
                  "type": "text",
                  "text": "."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "They’re prone to abuse — just like "
                },
                {
                  "type": "text",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ],
                  "text": "keywords"
                },
                {
                  "type": "text",
                  "text": " in metadata. Even "
                },
                {
                  "type": "text",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ],
                  "text": "lastModified"
                },
                {
                  "type": "text",
                  "text": " "
                },
                {
                  "type": "text",
                  "marks": [
                    {
                      "type": "bold"
                    }
                  ],
                  "text": "only matters"
                },
                {
                  "type": "text",
                  "text": " if it’s \""
                },
                {
                  "type": "text",
                  "marks": [
                    {
                      "type": "link",
                      "attrs": {
                        "href": "https://developers.google.com/search/docs/crawling-indexing/sitemaps/build-sitemap#additional-notes-about-xml-sitemaps",
                        "target": "_blank",
                        "rel": "noopener"
                      }
                    }
                  ],
                  "text": "consistently and verifiably accurate"
                },
                {
                  "type": "text",
                  "text": "\"."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "Do I Need a Sitemap Index?"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Another question: do you need a sitemap index?"
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://developers.google.com/search/docs/crawling-indexing/sitemaps/build-sitemap#general-guidelines",
                "target": "_blank",
                "rel": "noopener"
              }
            }
          ],
          "text": "Google limits sitemaps to 50,000 URLs each"
        },
        {
          "type": "text",
          "text": "."
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "A sitemap index lets you split large sites into multiple sitemaps."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "marks": [
            {
              "type": "italic"
            }
          ],
          "text": "Unless"
        },
        {
          "type": "text",
          "text": " you’re expecting over 50,000 URLs, this is overkill."
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "It’s a complex feature and often a premature optimization, much like JSON-LD for metadata."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "If you "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "italic"
            }
          ],
          "text": "do"
        },
        {
          "type": "text",
          "text": " need it, here’s how:"
        }
      ]
    },
    {
      "type": "orderedList",
      "attrs": {
        "start": 1
      },
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Use a library like "
                },
                {
                  "type": "text",
                  "marks": [
                    {
                      "type": "link",
                      "attrs": {
                        "href": "https://github.com/iamvishnusankar/next-sitemap",
                        "target": "_blank",
                        "rel": "noopener"
                      }
                    }
                  ],
                  "text": "next-sitemap"
                },
                {
                  "type": "text",
                  "text": ", which provides straightforward instructions for generating a sitemap index."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Write custom code. "
                },
                {
                  "type": "text",
                  "marks": [
                    {
                      "type": "link",
                      "attrs": {
                        "href": "https://nextjs.org/docs/app/api-reference/functions/generate-sitemaps",
                        "target": "_blank",
                        "rel": "noopener"
                      }
                    }
                  ],
                  "text": "Next.js has an API for generating multiple sitemaps"
                },
                {
                  "type": "text",
                  "text": ", but "
                },
                {
                  "type": "text",
                  "marks": [
                    {
                      "type": "link",
                      "attrs": {
                        "href": "https://github.com/vercel/next.js/discussions/61025",
                        "target": "_blank",
                        "rel": "noopener"
                      }
                    }
                  ],
                  "text": "you’ll need to generate the index file manually"
                },
                {
                  "type": "text",
                  "text": ". ("
                },
                {
                  "type": "text",
                  "marks": [
                    {
                      "type": "link",
                      "attrs": {
                        "href": "https://github.com/vercel/next.js/pull/61391",
                        "target": "_blank",
                        "rel": "noopener"
                      }
                    }
                  ],
                  "text": "There’s a pull request to automate this"
                },
                {
                  "type": "text",
                  "text": ", but it’s still a work in progress.)"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 0
      },
      "content": [
        {
          "type": "text",
          "text": "Robots"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "This is the easiest section of the guide. We will:"
        }
      ]
    },
    {
      "type": "bulletList",
      "content": [
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Allow everything."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Disallow "
                },
                {
                  "type": "text",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ],
                  "text": "/api/*"
                },
                {
                  "type": "text",
                  "text": " paths."
                }
              ]
            }
          ]
        },
        {
          "type": "listItem",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Use the "
                },
                {
                  "type": "text",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ],
                  "text": "resolveUrl"
                },
                {
                  "type": "text",
                  "text": " utility to define the sitemap URL."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "And that’s it."
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "No tricks, no complications."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 0
      },
      "content": [
        {
          "type": "text",
          "text": "Wrapping Up"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "That's it! Now you have a solid foundation for most projects."
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "Hopefully, I’ve dispelled some myths about things that "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "italic"
            }
          ],
          "text": "don’t"
        },
        {
          "type": "text",
          "text": " matter anymore."
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "Most of them are just edge cases."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Sure, you might need JSON-LD or better Twitter Cards at some point."
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "But that’s easy to figure out."
        },
        {
          "type": "hardBreak"
        },
        {
          "type": "text",
          "text": "And it will fit right into this setup."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "SEO "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "italic"
            }
          ],
          "text": "might not"
        },
        {
          "type": "text",
          "text": " be fun, but it "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "italic"
            }
          ],
          "text": "doesn’t"
        },
        {
          "type": "text",
          "text": " have to be a headache."
        }
      ]
    }
  ]
}
